# Explanatory file.
# Usage:
#   python emu_like.py sample explanatory_sample.yaml -v

# Output folder (str)
output: output/test_sample

# Number of samples to generate (int)
n_samples: 1000

# Name of the function to be used. It has to be one of the functions
# defined in tools/sampling_functions.py. All of them should have
# the same structure:
#   - input: array of x sample, list of varying parameters, params dict
#   - output: corresponding y value(s)
# Current options: linear_1d, quadratic_1d, gaussian_1d, linear_2d,
# quadratic_2d, cobaya_loglike.
# With cobaya_loglike one can choose any Cobaya likelihood, adding
# params, likelihood, prior (optional) and theory (optional)
# blocks following the Cobaya scheme.
function: linear_1d

# Spacing method (str).
# Options: evaluate, grid, log_grid, random_uniform, random_normal,
# latin_hypercube. In evaluate mode, it will evaluate the pipeline at a
# single point specified by the value of ref for each parameter
# (otherwise ref is ignored).
spacing: grid

# List of params.
# If the function to sample is cobaya_loglike all this, plus the additional
# blocks needed by cobaya should be encapsulated by a "cobaya" block.
params:
  # If spacing grid, log_grid, random_normal or latin_hypercube use (min, max)
  # If spacing random_uniform use (loc, scale), with loc=mean and scale=sigma.
  x: # sampled parameter
    prior:
      min: -1.
      max: 4.
    ref: 2.  # this is used only in evaluate spacing mode
  a: 2. # fixed parameter
  b: -1. # fixed parameter
